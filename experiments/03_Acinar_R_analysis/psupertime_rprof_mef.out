sample.interval=20000
"is.list" "getClassDef" "is" "FUN" "lapply" "lapply" ".nextMethod" "callNextMethod" "updateObject" "updateObject" ".nextMethod" "eval" "eval" "callNextMethod" ".local" "colData" "colData" "standardGeneric" "nrow" "dim" "dim" "dim" "nrow" ".check_params" "psupertime::psupertime" 
"base::rowMeans" "Matrix::rowMeans" "Matrix::rowMeans" ".calc_hvg_genes" ".select_genes" "psupertime::psupertime" 
".Call" "beachmat_internal_FUN" ".viewport_helper" ".blockApply2" "rowBlockApply" ".compute_mean_var" "FUN" ".model_gene_var" ".local" "modelGeneVar" "modelGeneVar" ".calc_hvg_genes" ".select_genes" "psupertime::psupertime" 
"approx" ".inverse_density_weights" "fitTrendVar" ".decompose_log_exprs" ".model_gene_var" ".local" "modelGeneVar" "modelGeneVar" ".calc_hvg_genes" ".select_genes" "psupertime::psupertime" 
"<Anonymous>" "mapply" "<Anonymous>" "do.call" ".setup_nls_args" "fitTrendVar" ".decompose_log_exprs" ".model_gene_var" ".local" "modelGeneVar" "modelGeneVar" ".calc_hvg_genes" ".select_genes" "psupertime::psupertime" 
"^" "numericDeriv" "getRHS" "<Anonymous>" "<Anonymous>" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "fitTrendVar" ".decompose_log_exprs" ".model_gene_var" ".local" "modelGeneVar" "modelGeneVar" ".calc_hvg_genes" ".select_genes" "psupertime::psupertime" 
".Call" "weightedLowess" "fitTrendVar" ".decompose_log_exprs" ".model_gene_var" ".local" "modelGeneVar" "modelGeneVar" ".calc_hvg_genes" ".select_genes" "psupertime::psupertime" 
".Call" "weightedLowess" "fitTrendVar" ".decompose_log_exprs" ".model_gene_var" ".local" "modelGeneVar" "modelGeneVar" ".calc_hvg_genes" ".select_genes" "psupertime::psupertime" 
".Call" "weightedLowess" "fitTrendVar" ".decompose_log_exprs" ".model_gene_var" ".local" "modelGeneVar" "modelGeneVar" ".calc_hvg_genes" ".select_genes" "psupertime::psupertime" 
".Call" "weightedLowess" "fitTrendVar" ".decompose_log_exprs" ".model_gene_var" ".local" "modelGeneVar" "modelGeneVar" ".calc_hvg_genes" ".select_genes" "psupertime::psupertime" 
".Call" "weightedLowess" "fitTrendVar" ".decompose_log_exprs" ".model_gene_var" ".local" "modelGeneVar" "modelGeneVar" ".calc_hvg_genes" ".select_genes" "psupertime::psupertime" 
".Call" "weightedLowess" "fitTrendVar" ".decompose_log_exprs" ".model_gene_var" ".local" "modelGeneVar" "modelGeneVar" ".calc_hvg_genes" ".select_genes" "psupertime::psupertime" 
".Call" "weightedLowess" "fitTrendVar" ".decompose_log_exprs" ".model_gene_var" ".local" "modelGeneVar" "modelGeneVar" ".calc_hvg_genes" ".select_genes" "psupertime::psupertime" 
"order" "p.adjust" ".decompose_log_exprs" ".model_gene_var" ".local" "modelGeneVar" "modelGeneVar" ".calc_hvg_genes" ".select_genes" "psupertime::psupertime" 
"forderv" "setorderv" "setorder" ".calc_hvg_genes" ".select_genes" "psupertime::psupertime" 
"paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" ".nextMethod" "callNextMethod" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "coerce2" "coerce2" ".make_endoapply_ans" "endoapply" "assays" "assays" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "assay" "assay" ".calc_expressed_genes" ".select_genes" "psupertime::psupertime" 
"rowMeans" ".calc_expressed_genes" ".select_genes" "psupertime::psupertime" 
"base::rowMeans" "rowMeans" "rowMeans" ".calc_expressed_genes" ".select_genes" "psupertime::psupertime" 
"t.default" "t" "standardGeneric" "t" ".make_x_data" "psupertime::psupertime" 
"t.default" "t" "standardGeneric" "t" ".make_x_data" "psupertime::psupertime" 
"match.arg" "order" "sort.list" "FUN" "apply" ".make_x_data" "psupertime::psupertime" 
"aperm.default" "aperm" "sweep" ".make_x_data" "psupertime::psupertime" 
"strsplit" "lengths" ".fillSignatures" ".findInheritedMethods" ".findNextFromTable" "addNextMethod" "addNextMethod" "callNextMethod" ".nextMethod" "callNextMethod" "updateObject" "updateObject" ".nextMethod" "callNextMethod" "updateObject" "updateObject" "METHOD" "updateObject" "updateObject" "rowRanges" "rowRanges" "names" "names" "names" "dimnames" "dimnames" "dimnames" "colnames" ".make_x_data" "psupertime::psupertime" 
".getClassesFromCache" "getClassDef" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "is" "drop0" "getcoef" "lognet" "glmnet" ".glmnetcr_propn" ".train_on_folds" "psupertime::psupertime" 
"standardGeneric" "drop" "subCsp_cols" "[" "[" "eval" "eval" "callGeneric" "[" "[" ".predict_glmnetcr_propodds" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
"any" "noNA.levels" "Ops.factor" "FUN" "lapply" "sapply" "standardGeneric" "t" ".calc_multiple_scores" "FUN" "lapply" "sapply" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
"[.factor" "[" "as.list.factor" "as.list" "lapply" "sapply" "standardGeneric" "t" ".calc_multiple_scores" "FUN" "lapply" "sapply" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
".Call" "lognet_exp" "lognet" "glmnet" ".glmnetcr_propn" ".train_on_folds" "psupertime::psupertime" 
".predict_glmnetcr_propodds" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
"Ops.factor" "FUN" "lapply" "sapply" "standardGeneric" "t" ".calc_multiple_scores" "FUN" "lapply" "sapply" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
"Ops.factor" "FUN" "lapply" "sapply" "standardGeneric" "t" ".calc_multiple_scores" "FUN" "lapply" "sapply" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
".Call" "lognet_exp" "lognet" "glmnet" ".glmnetcr_propn" ".train_on_folds" "psupertime::psupertime" 
"apply" ".predict_glmnetcr_propodds" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
"[" "as.list.factor" "as.list" "lapply" "sapply" "standardGeneric" "t" ".calc_multiple_scores" "FUN" "lapply" "sapply" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
"[.factor" "[" "as.list.factor" "as.list" "lapply" "sapply" "standardGeneric" "t" ".calc_multiple_scores" "FUN" "lapply" "sapply" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
".Call" "lognet_exp" "lognet" "glmnet" ".glmnetcr_propn" ".train_on_folds" "psupertime::psupertime" 
"is.list" "getClassDef" "getClass" "<Anonymous>" "subCsp_cols" "[" "[" "eval" "eval" "callGeneric" "[" "[" ".predict_glmnetcr_propodds" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
"$" ".predict_glmnetcr_propodds" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
"Ops.factor" "FUN" "lapply" "sapply" "standardGeneric" "t" ".calc_multiple_scores" "FUN" "lapply" "sapply" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
"getOption" "[.data.table" "[" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
"which" ".predict_glmnetcr_propodds" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
"apply" ".predict_glmnetcr_propodds" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
"Ops.factor" "FUN" "lapply" "sapply" "standardGeneric" "t" ".calc_multiple_scores" "FUN" "lapply" "sapply" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
"mean.default" "mean" ".calc_multiple_scores" "FUN" "lapply" "sapply" ".calc_scores_for_one_fit" ".train_on_folds" "psupertime::psupertime" 
".Call" "lognet_exp" "lognet" "glmnet" ".glmnetcr_propn" ".get_best_fit" "psupertime::psupertime" 
".predict_glmnetcr_propodds" ".calc_scores_for_one_fit" ".make_scores_dt" "psupertime::psupertime" 
"unlist" "simplify2array" "sapply" "standardGeneric" "t" ".calc_multiple_scores" "FUN" "lapply" "sapply" ".calc_scores_for_one_fit" ".make_scores_dt" "psupertime::psupertime" 
"apply" ".predict_glmnetcr_propodds" ".calc_proj_dt" "psupertime::psupertime" 
"apply" ".predict_glmnetcr_propodds" ".calc_proj_dt" "psupertime::psupertime" 
"apply" ".predict_glmnetcr_propodds" ".calc_proj_dt" "psupertime::psupertime" 
"apply" ".predict_glmnetcr_propodds" ".calc_proj_dt" "psupertime::psupertime" 
"t.default" "t" "standardGeneric" "t" ".predict_glmnetcr_propodds" ".calc_proj_dt" "psupertime::psupertime" 
"lazyLoadDBfetch" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "functionArgs" ".completeToken" 
"ls" "%in%" "find" "getAnywhere" "<Anonymous>" "do.call" "FUN" "lapply" "unlist" "unique" "functionArgs" ".completeToken" 
"readChar" "load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"load" 
"data.frame" "inFunction" ".completeToken" 
"ls" "%in%" "find" "getAnywhere" "<Anonymous>" "do.call" "FUN" "lapply" "unlist" "unique" "functionArgs" ".completeToken" 
"match.arg" "sink.number" "no_sink" "cli_output_connection" "get_real_output" "cli::ansi_show_cursor" "cb" 
